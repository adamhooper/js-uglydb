/**
 * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

!function(){var r,e,n;!function(t){function i(r,e){return A.call(r,e)}function o(r,e){var n,t,i,o,u,l,s,c,f,a,h=e&&e.split("/"),p=w.map,y=p&&p["*"]||{};if(r&&"."===r.charAt(0))if(e){for(h=h.slice(0,h.length-1),r=h.concat(r.split("/")),c=0;c<r.length;c+=1)if(a=r[c],"."===a)r.splice(c,1),c-=1;else if(".."===a){if(1===c&&(".."===r[2]||".."===r[0]))break;c>0&&(r.splice(c-1,2),c-=2)}r=r.join("/")}else 0===r.indexOf("./")&&(r=r.substring(2));if((h||y)&&p){for(n=r.split("/"),c=n.length;c>0;c-=1){if(t=n.slice(0,c).join("/"),h)for(f=h.length;f>0;f-=1)if(i=p[h.slice(0,f).join("/")],i&&(i=i[t])){o=i,u=c;break}if(o)break;!l&&y&&y[t]&&(l=y[t],s=c)}!o&&l&&(o=l,u=s),o&&(n.splice(0,u,o),r=n.join("/"))}return r}function u(r,e){return function(){return p.apply(t,x.call(arguments,0).concat([r,e]))}}function l(r){return function(e){return o(e,r)}}function s(r){return function(e){g[r]=e}}function c(r){if(i(b,r)){var e=b[r];delete b[r],m[r]=!0,h.apply(t,e)}if(!i(g,r)&&!i(m,r))throw new Error("No "+r);return g[r]}function f(r){var e,n=r?r.indexOf("!"):-1;return n>-1&&(e=r.substring(0,n),r=r.substring(n+1,r.length)),[e,r]}function a(r){return function(){return w&&w.config&&w.config[r]||{}}}var h,p,y,d,g={},b={},w={},m={},A=Object.prototype.hasOwnProperty,x=[].slice;y=function(r,e){var n,t=f(r),i=t[0];return r=t[1],i&&(i=o(i,e),n=c(i)),i?r=n&&n.normalize?n.normalize(r,l(e)):o(r,e):(r=o(r,e),t=f(r),i=t[0],r=t[1],i&&(n=c(i))),{f:i?i+"!"+r:r,n:r,pr:i,p:n}},d={require:function(r){return u(r)},exports:function(r){var e=g[r];return"undefined"!=typeof e?e:g[r]={}},module:function(r){return{id:r,uri:"",exports:g[r],config:a(r)}}},h=function(r,e,n,o){var l,f,a,h,p,w,A=[];if(o=o||r,"function"==typeof n){for(e=!e.length&&n.length?["require","exports","module"]:e,p=0;p<e.length;p+=1)if(h=y(e[p],o),f=h.f,"require"===f)A[p]=d.require(r);else if("exports"===f)A[p]=d.exports(r),w=!0;else if("module"===f)l=A[p]=d.module(r);else if(i(g,f)||i(b,f)||i(m,f))A[p]=c(f);else{if(!h.p)throw new Error(r+" missing "+f);h.p.load(h.n,u(o,!0),s(f),{}),A[p]=g[f]}a=n.apply(g[r],A),r&&(l&&l.exports!==t&&l.exports!==g[r]?g[r]=l.exports:a===t&&w||(g[r]=a))}else r&&(g[r]=n)},r=e=p=function(r,e,n,i,o){return"string"==typeof r?d[r]?d[r](e):c(y(r,e).f):(r.splice||(w=r,e.splice?(r=e,e=n,n=null):r=t),e=e||function(){},"function"==typeof n&&(n=i,i=o),i?h(t,r,e,n):setTimeout(function(){h(t,r,e,n)},4),p)},p.config=function(r){return w=r,w.deps&&p(w.deps,w.callback),p},r._defined=g,n=function(r,e,n){e.splice||(n=e,e=[]),i(g,r)||i(b,r)||(b[r]=[r,e,n])},n.amd={jQuery:!0}}(),n("almond",function(){}),function(){n("uglydb/read",[],function(){var r,e,n,t;return r="http://git.io/uglydb-0.1",n=Object.prototype.toString,e=function(r){return"[object String]"===n.call(r)},t=function(n){var t,i,o,u,l,s,c,f,a,h,p,y,d;if(!Array.isArray(n))throw new Error("Invalid uglydb JSON: it must be an Array. See "+r);if(f={specUrl:null,keys:null,records:null,stringArray:null,objectArray:null},p=0,e(n[p])&&(f.specUrl=n[p],p+=1,f.specUrl!==r))throw new Error("Expected uglydb JSON to have spec "+r+", but its spec is "+f.specUrl);if(!Array.isArray(n[p]))throw new Error("Expected uglydb header to be an Array. See "+r);if(o=function(){return new Error('Expected uglydb header to have format [ "key1", 3, "key2", 1, ... ]. See '+r)},t=n[p],p+=1,0!==t.length%2)throw o();for(l=f.keys=[],c=!1,s=!1,i=y=0,d=t.length;d>y;i=y+=2){if(u=t[i],h=t[i+1],2===h&&(s=!0),3===h&&(c=!0),!e(u))throw o();if(1!==h&&2!==h&&3!==h)throw new Error("Type "+JSON.stringify(h)+" in the header is not a key type. Valid key types are 1, 2 and 3. See "+r);l.push({key:u,type:h})}if(!Array.isArray(n[p]))throw new Error("Expected uglydb records array to be an Array. See "+r);if(f.records=n[p],p+=1,l.length>0&&0!==f.records.length%l.length||0===l.length&&f.records.length>0)throw new Error("The records array has "+f.records.length+" values, but it needs a multiple of "+l.length+". See "+r);if(c){if(a=n[p],p+=1,!e(a))throw new Error("There is a column of type 3 but there is no String array. See "+r);f.stringArray=a.split(a.charAt(0)).slice(1)}if(s){if(!Array.isArray(n[p]))throw new Error("There is a column of type 2 but there is no Object array. See "+r);f.objectArray=n[p]}return f},function(e){var n,i,o,u,l,s,c,f,a,h,p,y,d,g,b;for(p=t(e),o=function(){var r,e,t,i;for(t=p.keys,i=[],r=0,e=t.length;e>r;r++)n=t[r],i.push(n.key);return i}(),u=function(){var r,e,t,i;for(t=p.keys,i=[],r=0,e=t.length;e>r;r++)n=t[r],i.push(n.type);return i}(),s=p.stringArray,l=p.objectArray,a=[],c={},i=0,b=p.records,d=0,g=b.length;g>d;d++)f=b[d],h=u[i],y=function(){switch(u[i]){case 1:return f;case 2:if(0>f||f>=l.length)throw new Error("A normalized object is requested at index "+f+" but the maximum index is "+(l.length-1)+". See "+r);return l[f];case 3:if(0>f)return null;if(f>=s.length)throw new Error("A normalized string is requested at index "+f+" but the maximum index is "+(s.length-1)+". See "+r);return s[f]}}(),c[o[i]]=y,i+=1,i===o.length&&(a.push(c),c={},i=0);return a}})}.call(this),function(){var e;e=r("./uglydb/read"),window.uglyDb={read:e}}.call(this),n("uglydb-read",function(){})}();